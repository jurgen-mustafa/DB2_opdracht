WEBVTT

00:00:01.046 --> 00:00:02.068
wat zien we hier?

00:00:02.093 --> 00:00:05.653
dus voor de vraag die gesteld was

00:00:12.262 --> 00:00:15.743
dus geef voor elk album 
de 2 langste nummers

00:00:15.929 --> 00:00:17.196
we gaan op zoek

00:00:18.043 --> 00:00:20.376
naar de performant mogelijkste query

00:00:20.777 --> 00:00:22.677
dus dat wilt zeggen

00:00:22.923 --> 00:00:25.089
voor die eerste oplossing
die we daar hebben

00:00:26.629 --> 00:00:28.962
kijken we naar deze cost

00:00:28.996 --> 00:00:30.185
dus dan zie je eigenlijk

00:00:30.346 --> 00:00:34.009
als je het moet samenvatten in een getal
kijk je altijd naar de bovenste lijn

00:00:34.042 --> 00:00:36.453
er waren een aantal studenten die 
dat daarstraks vroegen

00:00:36.630 --> 00:00:39.518
dus de bovenste lijn geeft
de samenvatting van het heel queryplan

00:00:39.685 --> 00:00:44.296
het queryplan is hetgeen wat de planner/
de opimizer intern heeft beslist van

00:00:44.318 --> 00:00:49.883
met de hardware &amp; geheugen die ik heb
met hetgeen dat ik weet van de tabel

00:00:50.038 --> 00:00:54.293
is dit volgens mij de beste manier om 
deze query uit te voeren

00:00:54.436 --> 00:00:56.122
dus hij omschrijft dat hier

00:00:56.581 --> 00:00:58.871
het belangrijkste getal hier is 
het laatste getal

00:00:59.044 --> 00:01:01.658
dus die 5700 wilt zeggen

00:01:01.892 --> 00:01:04.208
das de kostprijs om alle data te tonen

00:01:04.472 --> 00:01:10.115
en die 16 is de kostprijs om 
de eerste rij te tonen

00:01:10.527 --> 00:01:12.911
daarstraks waren er mensen
dus das kostprijzen

00:01:12.970 --> 00:01:15.665
Je kan alleen maar kostprijzen vergelijken
op dezelfde databank

00:01:15.709 --> 00:01:19.582
omdat die ook afhankelijk zijn van parameters 
die je kan instellen op u databank

00:01:20.287 --> 00:01:22.371
dus dan je natuurlijk gaan kijken van
ja maar ja

00:01:23.194 --> 00:01:25.510
ik wil ook de tijd tonen

00:01:25.699 --> 00:01:29.455
wie weet nog de optie dat je
effectief die query gaat uitvoeren?

00:01:29.691 --> 00:01:32.018
dat je de tijd ook toont
bij die explain?

00:01:35.810 --> 00:01:38.048
ja indeerdaad Arthur
Analyze

00:01:40.706 --> 00:01:43.522
dus dan krijg je een idee van de tijd

00:01:43.696 --> 00:01:47.534
wat dat we hier zijn is dat de tijd 
eigenlijk vrij snel is

00:01:47.674 --> 00:01:50.234
dus dat is hier 11 miliseconden

00:01:51.368 --> 00:01:53.391
ik denk dat alles onder ...

00:01:55.054 --> 00:02:00.304
onze ogen werken bijvoorbeeld als je naar
film kijkt dan 30 frames per seconde

00:02:01.803 --> 00:02:06.510
dus als het een duizend miliseconden zijn
we delen dat door 30

00:02:07.050 --> 00:02:08.750
en zelfs 20 frames zou ik zeggen

00:02:08.984 --> 00:02:12.086
alles onder de 50 miliseconden is eigenlijk
voor onze ogen

00:02:12.115 --> 00:02:14.271
dus dan komt het resultaat 
nog altijd heel snel

00:02:14.296 --> 00:02:16.363
al hetgeen dat onder de 50 miliseconde is

00:02:16.388 --> 00:02:19.314
dus opzich is die query aanvaardbaar met
de data dat daarin staat

00:02:19.436 --> 00:02:22.861
het is niet dat het zegt 
"je hebt hier een optimalizatieprobleem"

00:02:25.142 --> 00:02:26.314
wat zien we hier nog?

00:02:26.778 --> 00:02:28.876
we zien hier bijvoorbeeld
dat de planner

00:02:29.151 --> 00:02:34.238
heeft 0.2 miliseconden nodig afgerond
en het effectieve uitvoeren is

00:02:34.367 --> 00:02:38.161
die 11 miliseconden dus we komen samen
aan 12 miliseconden ongeveer

00:02:39.030 --> 00:02:40.920
dus een query die efficient genoeg is

00:02:41.001 --> 00:02:43.901
maar we kunnen kijken
zijn er nog meer opties?

00:02:47.145 --> 00:02:50.983
dus dan gaan we ne keer kijken
naar een andere optie

00:02:53.861 --> 00:02:54.861
even kijken

00:03:01.633 --> 00:03:03.454
dus dit was met een lateral

00:03:03.699 --> 00:03:06.302
dit is met een ...
zonder lateral

00:03:06.387 --> 00:03:08.243
we gaan die ne keer proberen

00:03:09.449 --> 00:03:10.449
efkes kijken

00:03:16.880 --> 00:03:17.880
ja...

00:03:18.635 --> 00:03:19.635
nu...

00:03:19.911 --> 00:03:23.816
als ik nu lui ben en ik wil snel weten
of dat deze query de juiste query is

00:03:24.092 --> 00:03:25.297
hoe zou ik dat kunnen doen?

00:03:25.498 --> 00:03:28.517
dus euh .... die natural ok

00:03:28.922 --> 00:03:32.383
ik zie daar een paar dingen staan
er wordt daar geteld in de subquery

00:03:32.853 --> 00:03:34.053
efkes kijken...

00:03:35.739 --> 00:03:38.200
track
dus dat is deze track

00:03:38.494 --> 00:03:39.785
miliseconden

00:03:39.896 --> 00:03:44.930
dus er wordt hier geteld hoeveel dat 
er zijn die miliseconden minder hebben

00:03:48.568 --> 00:03:51.497
en dat mogen er maximum 2
dus als ik het goed bezie

00:03:52.092 --> 00:03:53.647
wat wordt er hier geteld?

00:03:54.074 --> 00:03:56.156
als ik het snel beschouw

00:03:56.500 --> 00:04:00.933
we tellen hier hoeveel tracks er zijn die
minder miliseconden hebben

00:04:02.687 --> 00:04:05.220
en dat mogen er maximum 1 zijn

00:04:05.245 --> 00:04:06.298
dus wat denk je dan?

00:04:15.997 --> 00:04:19.135
ik ga misschien de vorige query 
er ook even bij halen

00:04:21.943 --> 00:04:25.152
dan zie je deze hier
dus ik vind daar een...

00:04:26.115 --> 00:04:27.990
deze resultaten bijvoorbeeld

00:04:28.067 --> 00:04:31.608
en bij die andere query vind ik
precies toch iets anders

00:04:31.656 --> 00:04:33.542
alhoewel
efkes kijken

00:04:36.569 --> 00:04:37.569
pom pom pom

00:04:49.488 --> 00:04:52.853
ik ben lui bijvoorbeeld en ik ga er van uit
dat die eerste query goed is

00:04:52.878 --> 00:04:54.148
dus wat zou ik kunnen doen?

00:04:56.133 --> 00:04:58.494
ik kan het verschil gaan kijken 
van die queries

00:04:58.828 --> 00:05:01.149
dus ik kan bijvoorbeeld 
die eerste query nemen

00:05:02.704 --> 00:05:04.983
en ik kan dan zeggen van
"kijk..."

00:05:05.867 --> 00:05:06.867
"...accept"

00:05:07.167 --> 00:05:08.645
ik kan het verschil bekijken

00:05:08.975 --> 00:05:13.246
met die andere query
dus die query die daarnet gegeven werdt

00:05:13.596 --> 00:05:17.306
dus
ik ga die nog even terug knippen en plakken

00:05:21.695 --> 00:05:24.645
ik zie dat ik mijn scherm niet goed gedeeld hebt
moment

00:05:28.450 --> 00:05:30.188
dus dat gaan we even aanpassen

00:05:30.774 --> 00:05:31.774
sorry

00:05:31.833 --> 00:05:33.493
dus ik had gezegd van euh

00:05:34.112 --> 00:05:36.072
ik ga dit hier ondertussen even plakken

00:05:44.034 --> 00:05:46.107
dus er was de eerste query van daarnet

00:05:47.218 --> 00:05:50.547
namelijk die met de left lateral join

00:05:52.680 --> 00:05:55.610
die geeft deze resultaat
we hebben daar een bepaald

00:05:56.116 --> 00:06:00.156
kostprijs van genomen
die query was acceptabel qua performantie 
dat was ok